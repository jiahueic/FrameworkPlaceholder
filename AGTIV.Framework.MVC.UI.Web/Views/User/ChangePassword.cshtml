@using AGTIV.Framework.MVC.Framework.Helper
@using AGTIV.Framework.MVC.UI.ViewModel.User
@model AGTIV.Framework.MVC.UI.ViewModel.User.ChangePasswordVM

@{
    ViewBag.Title = "User Profile - Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var successMsg = ViewBag.SuccessMsg;
    var errorMsg = ViewBag.ErrorMsg;
    var redirectUrl = Url.Action("Update", new { id = Model.UserProfileId });
}

<div class="box box-info">
    <div class="box-header with-border">
        <div class="box-title">Change Password</div>
    </div>
    @using(Html.BeginForm())
    {
        <div class="box-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserProfileId)
            @Html.HiddenFor(model => model.AppUserId)

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label">
                            @Html.LabelFor(m => m.OldPassword)
                        </div>
                        @Html.EJS().TextBoxFor(m => m.OldPassword).Placeholder(ConversionHelper.GetPropertyDisplayName<ChangePasswordVM>(c => c.OldPassword)).Type("password").CssClass("e-outline").Render()
                        @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label">
                            @Html.LabelFor(m => m.NewPassword)
                        </div>
                        @Html.EJS().TextBoxFor(m => m.NewPassword).Placeholder(ConversionHelper.GetPropertyDisplayName<ChangePasswordVM>(c => c.NewPassword)).Type("password").CssClass("e-outline").Render()
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label">
                            @Html.LabelFor(m => m.ConfirmPassword)
                        </div>
                        @Html.EJS().TextBoxFor(m => m.ConfirmPassword).Placeholder(ConversionHelper.GetPropertyDisplayName<ChangePasswordVM>(c => c.ConfirmPassword)).Type("password").CssClass("e-outline").Render()
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer text-right">
            @Html.EJS().Button("Change").Type("submit").Content("Change").CssClass("e-primary").Render()
            <a href="@redirectUrl" class="e-btn">Cancel</a>
        </div>
    }
</div>


@section scripts {
    <script type="text/javascript">
        var errorMessage = '@Html.Raw(errorMsg)';

        if (errorMessage != '') {
            Swal.fire({
                width: 500,
                padding: '3em',
                icon: 'error',
                title: '<strong>' + errorMessage + '</strong>',
                html: '<h4>Please try again</h4>'
            });
        }

        var successMessage = '@Html.Raw(successMsg)';

        if (successMessage != '') {
            Swal.fire({
                width: 500,
                padding: '3em',
                icon: 'success',
                title: '<strong>' + successMessage + '</strong>'
            }).then((result) => {
                if (result.value) {
                    window.location = "@redirectUrl";
                }
            });
        }
    </script>
}
@using AGTIV.Framework.MVC.Framework.Helper
@using AGTIV.Framework.MVC.UI.ViewModel.User
@model AGTIV.Framework.MVC.UI.ViewModel.User.ResetPasswordVM
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="ag-login-forgot kt-login__forgot">
    <div class="ag-login-header">
        <h3 class="ag-login-title">Reset Password</h3>
        <div class="ag-login-desc">Enter your new password:</div>
    </div>
    @using(Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.Token)

        <div class="row">
            <div class="col-md-12 form-group">
                <div class="control-label">
                    @Html.LabelFor(m => m.Password)
                </div>
                @Html.EJS().TextBoxFor(m => m.Password).Placeholder(ConversionHelper.GetPropertyDisplayName<ResetPasswordVM>(c => c.Password)).Type("password").CssClass("e-outline").Render()
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 form-group">
                <div class="control-label">
                    @Html.LabelFor(m => m.ConfirmPassword)
                </div>
                @Html.EJS().TextBoxFor(m => m.ConfirmPassword).Placeholder(ConversionHelper.GetPropertyDisplayName<ResetPasswordVM>(c => c.ConfirmPassword)).Type("password").CssClass("e-outline").Render()
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-12 text-right">
                @Html.EJS().Button("Reset").Type("submit").Content("Reset").CssClass("e-primary").Render()
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
